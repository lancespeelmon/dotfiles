[hub]
        protocol = https
[user]
        name = {{ full_name }}
        email = {{ git_email }}
{% if git_signing_key %}
        signingkey = {{ git_signing_key }}
{% endif %}
{% if ansible_os_family == 'Darwin' %}
[credential]
        helper = osxkeychain
{% endif %}
[gc]
    auto = 1
[alias]
        a = add
        st = status
        s = status
        co = checkout
        cob = checkout -b
        cp = cherry-pick
        c = checkout
        ci = commit
        noff = merge --no-ff
        l = log --graph --decorate --oneline --abbrev-commit --all
        h = log --graph --decorate --oneline --abbrev-commit
        plr = pull --rebase
        amend = commit --amend
        wip = commit --no-verify -am "WIP"
        br = branch
        rn = branch -m

        # diff-so-fancy
        # https://github.com/so-fancy/diff-so-fancy/#usage
        df = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"
        dfs = df --staged
        # Get changes for a single commit
        dfc = "!dfc() { git df $1^ $1; }; dfc"

        please = push --force-with-lease
        # publish current branch
        publish = "!f() { git push -u ${1:-origin} $(git rev-parse --abbrev-ref HEAD); }; f"
        pub = publish

        # Nukes a branch locally and on the origin remote.
        nuke = "!f() { git branch -D $1 && git push origin :$1; }; f"

        # Remove local branches that have been removed upstream
        cleanup = "!git fetch --all -p && git branch -vv | grep \": gone]\" | awk '{ print $1 }' | xargs -n 1 git branch -D"

        # Sync branches and cleanup local branches (depends on above alias)
        sup = "!hub sync && git checkout $(git remote show origin | grep 'HEAD branch' | sed 's/.*: //') && git cleanup"

        # http://gggritso.com/human-git-aliases
        unstage = reset -q HEAD --
        uns = unstage
        discard = checkout --
        dis = discard
        uncommit = reset --mixed HEAD~
        unc = uncommit

        issues = !hub browse -- issues
        url = "!f() { sha=$(git rev-parse ${1:-HEAD}); hub browse -u -- commit/$sha; }; f"

        # Copy current branch name to clipboard (macOS only)
        cb = "!git rev-parse --abbrev-ref HEAD | tr -d '\n' | pbcopy"

        # Slightly quicker way to credit an author on the latest commit.
        # Usage: git credit "Steven Loria" sloria1@gmail.com
        credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD }; f"

        # Set up your branch to track a remote branch. Assumes you mean `origin/$branch-name`.
        track = "!f() { branch=$(git rev-parse --abbrev-ref HEAD); git branch $branch --set-upstream-to origin/$branch }; f"
        
        # oldies but goodies
        outgoing = log -u origin/master..master # outgoing changes (in local, but not origin)
        # Better log formatting
        changes = log --pretty=format:'%h %cr %cn %Cgreen%s%Creset' --name-status
        short = log --pretty=format:'%h %cr %cn %Cgreen%s%Creset'
        filelog = log -u  # show changes to a file
        #    changelog = log --pretty=oneline
        changelog = log --pretty=format:'* %s `%h`' --no-merges
[color]
        diff = auto
        status = auto
        branch = auto
        ui = auto
        interactive = auto
[color "diff"]
    meta = yellow bold
    commit = green bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse
[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = "red bold 52"
    newNormal = "green bold"
    newHighlight = "green bold 22"
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[core]
        excludesfile = ~/.gitignore_global
        attributesfile = ~/.gitattributes_global
        editor = vim
	autocrlf = input
	pager = diff-so-fancy | less --tabs=2 -RFX
[apply]
        whitespace = nowarn
[branch]
  autosetuprebase = always
[merge]
    summary = true
[mergetool]
        keepBackup = false
	prompt = false
[diff]
    renameLimit = 10000
[difftool]
        prompt = false
[pull]
        rebase = true
[push]
	default = simple
[github]
        user = {{ git_user }}
[status]
        # needed for mvn release plugin: https://jira.codehaus.org/browse/SCM-740
        displayCommentPrefix = true
[grep]
	extendRegexp = true
{% if git_signing_key %}
[commit]
        gpgsign = true
{% endif %}
